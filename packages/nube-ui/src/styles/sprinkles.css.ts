import { createSprinkles, defineProperties } from '@vanilla-extract/sprinkles'

import { vars } from './vars.css'

import { toRgba } from '@/utils'

export const spaces = {
	auto: 'auto !important',
	0: '0 !important',
	1: '0.125rem !important',
	2: '0.25rem !important',
	3: '0.375rem !important',
	4: '0.5rem !important',
	5: '0.625rem !important',
	6: '0.75rem !important',
	7: '0.875rem !important',
	8: '1rem !important',
	9: '1.25rem !important',
	10: '1.5rem !important',
	11: '1.75rem !important',
	12: '2rem !important',
	13: '2.25rem !important',
	14: '2.5rem !important',
	15: '2.75rem !important',
	16: '3rem !important',
	17: '3.5rem !important',
	18: '4rem !important',
	20: '5rem !important',
	24: '6rem !important',
	28: '7rem !important',
	32: '8rem !important',
	36: '9rem !important',
	40: '10rem !important',
	44: '11rem !important',
	48: '12rem !important',
	52: '13rem !important',
	56: '14rem !important',
	60: '15rem !important',
	64: '16rem !important',
	72: '18rem !important',
	80: '20rem !important',
	96: '24rem !important',
}

const fontSizes = {
	xs: 12,
	sm: 14,
	md: 16,
	lg: 18,
	xl: 20,
	'2xl': 24,
	'3xl': 28,
	'4xl': 36,
}

//** Tailwind breakpoints */
export const breakpoints = {
	default: {},
	sm: { '@media': `screen and (min-width: 640px)` },
	md: { '@media': `screen and (min-width: 768px)` },
	lg: { '@media': `screen and (min-width: 1024px)` },
	xl: { '@media': `screen and (min-width: 1280px)` },
	'2xl': { '@media': `screen and (min-width: 1536px)` },
} as const

const tailwindWidthProperties = {
	auto: 'auto',
	'min-content': 'min-content',
	'max-content': 'max-content',
	inherit: 'inherit',
	full: '100%',
	screen: '100vw',
	'1/2': '50%',
	'1/3': '33.333333%',
	'2/3': '66.666667%',
	'1/4': '25%',
	'2/4': '50%',
	'3/4': '75%',
	'1/5': '20%',
	'2/5': '40%',
	'3/5': '60%',
	'4/5': '80%',
	'1/6': '16.666667%',
	'2/6': '33.333333%',
	'3/6': '50%',
	'4/6': '66.666667%',
	'5/6': '83.333333%',
	'1/12': '8.333333%',
	'2/12': '16.666667%',
	'3/12': '25%',
	'4/12': '33.333333%',
	'5/12': '41.666667%',
	'6/12': '50%',
	'7/12': '58.333333%',
	'8/12': '66.666667%',
	'9/12': '75%',
	'10/12': '83.333333%',
	'11/12': '91.666667%',
	0: '0',
	1: '0.25rem',
	2: '0.5rem',
	3: '0.75rem',
	4: '1rem',
	5: '1.25rem',
	6: '1.5rem',
	8: '2rem',
	10: '2.5rem',
	12: '3rem',
	16: '4rem',
	20: '5rem',
	24: '6rem',
	32: '8rem',
	40: '10rem',
	48: '12rem',
	56: '14rem',
	64: '16rem',
	72: '18rem',
	80: '20rem',
	96: '24rem',
	128: '32rem',
	144: '36rem',
	160: '40rem',
	192: '48rem',
	208: '52rem',
	sm: '640px',
	md: '768px',
	lg: '1024px',
	xl: '1280px',
	'2xl': '1536px',
}

const tailwindHeightProperties = {
	auto: 'auto',
	'min-content': 'min-content',
	'max-content': 'max-content',
	inherit: 'inherit',
	full: '100%',
	screen: '100vh',
	'1/2': '50%',
	'1/3': '33.333333%',
	'2/3': '66.666667%',
	'1/4': '25%',
	'2/4': '50%',
	'3/4': '75%',
	'1/5': '20%',
	'2/5': '40%',
	'3/5': '60%',
	'4/5': '80%',
	'1/6': '16.666667%',
	'2/6': '33.333333%',
	'3/6': '50%',
	'4/6': '66.666667%',
	'5/6': '83.333333%',
	'1/12': '8.333333%',
	'2/12': '16.666667%',
	'3/12': '25%',
	'4/12': '33.333333%',
	'5/12': '41.666667%',
	'6/12': '50%',
	'7/12': '58.333333%',
	'8/12': '66.666667%',
	'9/12': '75%',
	'10/12': '83.333333%',
	'11/12': '91.666667%',
	0: '0',
	1: '0.25rem',
	2: '0.5rem',
	3: '0.75rem',
	4: '1rem',
	5: '1.25rem',
	6: '1.5rem',
	8: '2rem',
	10: '2.5rem',
	12: '3rem',
	16: '4rem',
	20: '5rem',
	24: '6rem',
	32: '8rem',
	40: '10rem',
	48: '12rem',
	56: '14rem',
	64: '16rem',
	72: '18rem',
	80: '20rem',
	96: '24rem',
	128: '32rem',
	144: '36rem',
	160: '40rem',
	192: '48rem',
	208: '52rem',
}

const tailwindGapProperties = {
	0: '0',
	1: '0.25rem',
	2: '0.5rem',
	3: '0.75rem',
	4: '1rem',
	5: '1.25rem',
	6: '1.5rem',
	8: '2rem',
	10: '2.5rem',
	12: '3rem',
	16: '4rem',
	20: '5rem',
	24: '6rem',
	32: '8rem',
	40: '10rem',
	48: '12rem',
	56: '14rem',
	64: '16rem',
	72: '18rem',
}

export const tailwindFontSizes = {
	xs: '0.75rem',
  sm: '0.875rem',
  md: '1rem',
  lg: '1.125rem',
  xl: '1.25rem',
	'2xl': '1.5rem',
  '3xl': '1.875rem',
  '4xl': '2.25rem',
}

const spaceProperties = defineProperties({
	conditions: breakpoints,
	defaultCondition: 'default',
	properties: {
		paddingTop: spaces,
		paddingBottom: spaces,
		paddingLeft: spaces,
		paddingRight: spaces,
		marginTop: spaces,
		marginRight: spaces,
		marginLeft: spaces,
		marginBottom: spaces,
		padding: spaces,
		margin: spaces,
	},
	shorthands: {
		p: ['padding'],
		px: ['paddingLeft', 'paddingRight'],
		py: ['paddingTop', 'paddingBottom'],
		pr: ['paddingRight'],
		pl: ['paddingLeft'],
		pb: ['paddingBottom'],
		pt: ['paddingTop'],
		m: ['margin'],
		mx: ['marginLeft', 'marginRight'],
		my: ['marginBottom', 'marginTop'],
		mr: ['marginRight'],
		ml: ['marginLeft'],
		mb: ['marginBottom'],
		mt: ['marginTop'],
	},
})

const responsiveProperties = defineProperties({
	conditions: breakpoints,
	defaultCondition: 'default',
	properties: {
		display: ['none', 'flex', 'block', 'inline', 'grid', 'inline-flex'],
		flexDirection: ['row', 'column'],
		justifyContent: ['stretch', 'flex-start', 'center', 'flex-end', 'space-around', 'space-between'],
		justifyItems: ['flex-start', 'center', 'flex-end', 'space-around'],
		justifySelf: ['auto', 'flex-start', 'center', 'flex-end', 'space'],
		alignItems: ['stretch', 'flex-start', 'center', 'flex-end'],
		alignContent: ['stretch', 'flex-start', 'center', 'flex-end'],
		alignSelf: ['auto', 'flex-start', 'center', 'flex-end'],
		placeContent: ['flex-start', 'center', 'flex-end', 'space-around'],
		placeItems: ['stretch', 'flex-start', 'center', 'flex-end'],
		placeSelf: ['stretch', 'flex-start', 'center', 'flex-end'],
		flexWrap: ['nowrap', 'wrap', 'wrap-reverse'],
		flexGrow: ['0', '1'],
		flexShrink: ['0', '1'],
		gap: tailwindGapProperties,
		gridGap: tailwindGapProperties,
		gridColumnGap: tailwindGapProperties,
		gridRowGap: tailwindGapProperties,
	},
	shorthands: {
		d: ['display'],
		fd: ['flexDirection'],
		jc: ['justifyContent'],
		ji: ['justifyItems'],
		js: ['justifySelf'],
		ai: ['alignItems'],
		fw: ['flexWrap'],
	},
})

const defaultColors = {
	primary: toRgba(vars.colors.primary),
	secondary: toRgba(vars.colors.secondary),
	success: toRgba(vars.colors.success),
	warning: toRgba(vars.colors.warning),
	danger: toRgba(vars.colors.danger),
	text: toRgba(vars.colors.text),
	textLight: toRgba(vars.colors.textLight),
	background: toRgba(vars.colors.background),
	gray: toRgba(vars.colors.gray),
}
const textProperties = defineProperties({
	conditions: breakpoints,
	defaultCondition: 'default',
	properties: {
		color: defaultColors,
		fontFamily: ['inherit', 'sans-serif', 'serif'],
		fontSize: tailwindFontSizes,
		fontWeight: ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '700', '800', '900'],
		lineHeight: ['normal', 'none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],
		textAlign: ['left', 'center', 'right', 'justify'],
		textTransform: ['none', 'uppercase', 'lowercase', 'capitalize'],
	},
})

const heighWidthProperties = defineProperties({
	conditions: breakpoints,
	defaultCondition: 'default',
	properties: {
		height: tailwindHeightProperties,
		minHeight: tailwindHeightProperties,
		maxHeight: tailwindHeightProperties,
		width: tailwindWidthProperties,
		minWidth: tailwindWidthProperties,
		maxWidth: tailwindWidthProperties,
	},
	shorthands: {
		h: ['height'],
		'min-h': ['minHeight'],
		w: ['width'],
		'min-w': ['minWidth'],
		'max-h': ['maxHeight'],
		'max-w': ['maxWidth'],
	},
})

const positionProperties = defineProperties({
	conditions: breakpoints,
	defaultCondition: 'default',
	properties: {
		position: ['static', 'fixed', 'relative', 'sticky', 'absolute'],
		top: spaces,
		right: spaces,
		bottom: spaces,
		left: spaces,
	},
})

export const css = createSprinkles(
	spaceProperties,
	responsiveProperties,
	textProperties,
	heighWidthProperties,
	positionProperties
)
